{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"01P - 01 - Unit 1 Basic Output & Program Requirements","provenance":[{"file_id":"1HRz-faYlskr00lXHmTN6DGdnWHKDfeEe","timestamp":1580488534679}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"QzfZk1xfljRM"},"source":["[Learning Plan Index](https://docs.google.com/document/d/1B5yWb6wCSRhqD42iWxCi7bmLPY2EqvU6pbiEQT0zs20/edit?usp=sharing)\n","\n","\n","[01P - 01 - Unit 1 Resources Python](https://docs.google.com/document/d/1BJ1lAtcR0_snNFrSTOMK8StnzlgP4VADHTdjjB-u7QI/edit?usp=sharing)\n","\n","## Basic Output \n","\n","Python has a simple print statement that will allow you to output information to the user. The print statement can be used to output text, numbers or complex expressions (Math equations 2 + 2 will output as 4) \n","\n","## Basic Comments\n","Like all languages Python has special characters for creating comments:\n","\n","\"#\" will comment out a line of code and can be place at the end of a line of working code\n","\n","Three apostrophes ''' can be used to open a block comment and that block must be closed with three more apostorphes '''.  If you open a block comment make sure to close it.\n","\n","It is very important to comment your code as a form for documentation for yourself or any other programmer that has to work with your code\n","\n","## Program Requirements\n","All of your programs are required to have a \"Program Name\" block comment like the one below that states your name, the date, the program name/problem number and the general purpose of the program.  Copy this block into your first program and then use it for every subsequent program.\n","```python\n","###############################################################################\n","#     Name : Gordon Reynolds                Date: 1/29/21                     #\n","#     Unit 1 Problem 1 Print Fun                                              #\n","#.    Print the word fun to the screen with letters and print statements      #\n","###############################################################################\n","```\n","# Comment Requirements\n","In your programs you need to code block mentioned above as well as:\n","1. \"Program Name\" block comment at top of program\n","2. All variables are commented\n","3. All control structures (if statements, loops) are commented above it stating the purpose\n","4. All functions are commented above stating the purpose, also expected inputs and outputs if any\n","5. All classes, class variables, class methods are commented, methods also list expected inputs and outputs if any\n","\n"]},{"cell_type":"code","metadata":{"id":"9jTT61uUv1lD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1631227239820,"user_tz":240,"elapsed":4,"user":{"displayName":"Gordon Reynolds","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGoYPRcMA4nR0qsuORT0NMtQ82CEGrL0v9oloo=s64","userId":"02111247687678533158"}},"outputId":"478fcfce-9128-4921-d8a9-9ed920db30eb"},"source":["#sample code name block copy this for your programs\n","###################################################################################\n","#     Name : Gordon Reynolds                Date: 1/29/21                         #\n","#     Unit 1 Problem 1 Print Fun                                                  #\n","#.    Print the word fun to the screen with letters and print statements          #\n","###################################################################################\n","\n","#The print statements start with numbers to help you identify the corresponding output\n","#a single line comment may be placed over a block of code for a brief description of what the code does\n","print(\"1. this is text because of the quotation marks\")\n","\n","print(\"2. this has a comment at the end of the line\") #end of line comments break up the code less\n","\n","print(\"3. 2 + 2\") #because of the \"\" this will print as text not math and numbers\n","\n","print() #printing a blank line to breakup output\n","\n","#the print statement will execute the math and output the results\n","print(\"4. output below is the result of print statements with only math in them:\")\n","print(20 + 20) \n","print(10.5 * 5 + 3 / 15 + 4)\n","\n","print() #printing a blank line to breakup output\n","\n","\n","#the code below has been completly commented out\n","#commenting out blocks of code can be done for debugging purposes\n","#it can also be done to presevere a version of the code or a sample for development purposes.\n","\n","print(\"5. Colab Notebooks seem to have an issue with the block comment '''\")\n","# ''' the three ' would normally open a block quote (does not seem to work in colab notebooks)\n","print(\"6. this should be commented out\")\n","print(\"7. but the ''' block quote does not appear\")\n","print(\"8. to work in colab notebooks\")\n","# ''' these three ' would normally close the block quote so that lines 29-31 are turned off\n","\n","print() #printing a blank line to breakup output\n","\n","#you can print multiple things on a line in two ways\n","print(\"9. Below are a couple of examples of concatenation, which is the combination of different things into a single output.\")  \n","print(\"10. There are two ways to use concatenation either: + or ,\")  \n","print(\"11. I teach at \" + \"Portsmouth High School\")  #I can combine outputs with a plus sign\n","\n","#print(\"12. My classroom # is\" + 114)      #this will cause an error because it wants to add a number and text\n","\n","print(\"13. My classroom # is\" , 114)     #if I am combining text and numbers using a , will prevent errors\n","\n","print(\"14. My classroom # is\" , 100 + 14)    #using the comma I can combine text and math equations\n","\n","\n","print() #printing a blank line to breakup output\n","\n","print(\"15. Interger division is division without a remainder and it uses two //\")\n","print(\"16. You will want to use integer division for the population problem #6\")\n","print(\"17. 7/4 = \", 7/4)\n","print(\"18. 7//4 = \", 7//4)\n","\n","print() #printing a blank line to breakup output\n","print(\"    ¯\\_(ツ)_/¯\")\n"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["1. this is text because of the quotation marks\n","2. this has a comment at the end of the line\n","3. 2 + 2\n","\n","4. output below is the result of print statements with only math in them:\n","40\n","56.7\n","\n","5. Colab Notebooks seem to have an issue with the block comment '''\n","6. this should be commented out\n","7. but the ''' block quote does not appear\n","8. to work in colab notebooks\n","\n","9. Below are a couple of examples of concatenation, which is the combination of different things into a single output.\n","10. There are two ways to use concatenation either: + or ,\n","11. I teach at Portsmouth High School\n","13. My classroom # is 114\n","14. My classroom # is 114\n","\n","15. Interger division is division without a remainder and it uses two //\n","16. You will want to use integer division for the population problem #6\n","17. 7/4 =  1.75\n","18. 7//4 =  1\n","\n","    ¯\\_(ツ)_/¯\n"]}]},{"cell_type":"markdown","metadata":{"id":"b5goQc2xW6GM"},"source":["# Proper Spacing\n","You should space your code our for readability\n","```python\n","print(1+2+3) #not ideal\n","print(1 + 2 + 3) #much better\n","```\n","\n","#Programming Error Types\n","\n","1. **Syntax errors** - Mean there is an error in the writing of your program so the compiler will not allow your program to compile at all.  You will have a lot of these, fortunately the compiler will tell you where your error is so you can hopefully fix it.\n","\n","2. **Runtime errors** - Runtime errors are the errors that occur during the execution of the program. Some examples are, dividing by zero error, referencing an out-of-range array element. These are not detected by the compiler during the compilation process.\n","\n","3. **Logic errors** - These are mistakes in the logic in your program, so while your program may work fine without crashing the results or the program will be wrong.\n","\n","4. **Latent Errors** - These are occasional errors that happen intermittently.  They could be runtime or logic errors that only occur under certain circumstances and they can be very hard to locate.\n","\n","\n","#Turtle Drawing Details\n","\n","Check out this [resource at python.org](https://docs.python.org/3/library/turtle.html) for details on all the features of using Turtles.\n","\n","For Repl.it you need to create a turtle Repl.it vs a regular Repl.it.  The type of Repl.it you create matters.  I cannot create Turtle programs in colab documents.  Check out this [Turtle Repl.it](https://repl.it/@MrReynolds/Unit1ColabExample) for and example.\n","\n","If you are using pycharm for your turtle programs, there are a lines of code that need to be added to the end of your file.  Without these lines of code your turtle window will open, excute, and close before you can really see it.  By adding: by creating your Turtle with myturtle = turtle.Screen() and then adding myturtle.exitonclick() to the end of the program will force the window to stay open until you close it.\n","\n","**myturtle = turtle.Screen()**\n","\n","**myturtle.exitonclick()** \n","\n","[Reference](https://pundit.pratt.duke.edu/wiki/Python:Turtle)"]}]}