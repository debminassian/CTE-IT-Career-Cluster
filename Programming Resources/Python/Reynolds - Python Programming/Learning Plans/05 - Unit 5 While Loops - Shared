{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Unit 5 While Loops","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNetBnBa/tYpNl7bQC5w7P/"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"HZn6jI2xnaPh"},"source":["[Learning Plan Index](https://docs.google.com/document/d/1B5yWb6wCSRhqD42iWxCi7bmLPY2EqvU6pbiEQT0zs20/edit?usp=sharing)\n","\n","\n","[05P - 01 - Unit 5 Loop Python Problems](https://docs.google.com/document/d/1FD9v6Uoyftd63JxYf4HFPjxh7U7UqQ0vckbNLM1K98U/edit?usp=sharing)\n","\n","\n","#Loops\n","\n","Loops allow us to repeat actions in a program.  There are a number of different types of loops.\n","\n","#while(boolean)\n","A while loop is great if you need to dynamically decide when your loop should stop.  Meaning you don't know at the start of your program how many times your code will need to loop.  For instance: how many tries does someone get to enter a password correctly?  I will need some condition to change within the while loop so that the controlling boolean expression changes in order to end the loop.\n","\n","![alt text](https://cdn.programiz.com/sites/tutorial2program/files/whileLoopFlowchart.jpg)\n","#Infintie Loop\n","A loop that does not end is referred to as an infinite loop.  An infinite loop will cause your program, and possibly your computer, to hang until the program, or your computer, crashes.  Infinite loops are bad.\n","\n","#break\n","There is a break keyword that can be used to exit a control structure if need be.  I would avoid using the break keyword unless that is the only choice you have logically.\n","\n","![alt text](https://cdn.programiz.com/sites/tutorial2program/files/flowchart-break-statement.jpg)\n","\n","#continue\n","Continue is like break, except it will exit the current iteration of the loop and go to the next.  Basically it says skip the rest of this loop iteration.\n","\n","![alt text](https://cdn.programiz.com/sites/tutorial2program/files/continue-statement-flowchart.jpg)\n","#else\n","Loops can have an else clause.  This would be very similiar to having a line of code right after your loop because once the loop's boolean condition was false the else statement would be triggered. However, If your loop exits with a break the else clause will not happen.\n","\n","#NO do while loop\n","Python does not have a do while loop.  A do while loop has its condition check at the end of the statement so the code in the loop will execute at least once. A regular while loop with an if statement and break can be used to mimic the behavior of the do while loop."]},{"cell_type":"code","metadata":{"id":"4oO2ulbcmblN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617890155333,"user_tz":240,"elapsed":64390,"user":{"displayName":"Gordon Reynolds","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGoYPRcMA4nR0qsuORT0NMtQ82CEGrL0v9oloo=s64","userId":"02111247687678533158"}},"outputId":"3e836fdd-6ee8-40ba-be0b-891db5e53e8b"},"source":["print(\"1. #Basic while loop outputting counter\")\n","count = 0               #set loop control variable to initial value\n","\n","#if I don't increment count this will become an infinite loop which will cause the colab doc to freeze\n","while(count < 10):      #us boolean comparison to decide if loop should happen or not\n","  print(count)          #print out count variable\n","  count += 1            #increment count so loop ends\n","\n","\n","#****************************************\n","print()\n","print()\n","print(\"2. #while loop outputs letters of the alphabet based on entered number\")\n","#while loop will print number entered of letters starting with 'a' using boolean comparisson logic to stop\n","\n","mycounter = eval(input(\"How many letters of the alphabet do you want to see?(boolean comparisson): \"))\n","mychar = 96                       #used for letter 'a'-1 count up from here and use for letter output until number entered is 0\n","while(mycounter > 0):             #count number entered down until 0\n","  mychar += 1                     #increase letter variable first loop will make it 97 = 'a'\n","  print(chr(mychar), end=',')     #covert number to character and print on single line\n","  mycounter -= 1                  #decrease counter to end loop\n","\n","\n","#****************************************\n","print()\n","print()\n","print(\"3. #while loop outputs letters of the alphabet based on entered number\")\n","print(\"4. #uses break statement to stop after z\")\n","print(\"5. #uses else statement if break is not triggered\")\n","print()\n","#while loop will print the NUMBER ENTERED of letters starting with 'a' using a break statement if number goes beyond whole alphabet\n","\n","mycounter = eval(input(\"How many letters of the alphabet do you want to see?(break): \"))\n","mychar = 96\n","while(mycounter > 0):                      #this is an infinite loop that will use the break statement to exit \n","  mychar += 1\n","  print(chr(mychar), end=',')\n","  mycounter -= 1\n","  if(mychar >= 122):             #boolean condition that decides if break statement should be called\n","    print(\"\\n6. That is the whole alphabet?\")              \n","    break                           #break statement exits loop and moves program on to next program statement after the loop\n","else:                               #while loops can have else statements that execute when the boolean control is false may work well with a break\n","  print(\"\\n7. Are these the letters you are looking for?\") \n","\n","\n","#****************************************\n","print()\n","print()\n","#while loop will print a word if number is 20 or higher, uses continue to skip any letters not in word \n","print(\"8. #while loop outputs only certain letters of the alphabet\")\n","print(\"9. #will print nothing if number is below 7\")\n","print(\"10. #20 and 20 will give variations of word\")\n","print()\n","\n","\n","mycounter = eval(input(\"How many letters of the alphabet do you want to see?(do 20 or 26 to get scared): \"))\n","mychar = 96\n","while(mycounter > 0):\n","  mycounter -= 1\n","  mychar += 1\n","  #check to see if the current iteration has one of the letters in the word, if not continue to nex iteration and skip print statement\n","  if(mychar != 103 and mychar != 104 and mychar != 111 and mychar != 115 and mychar != 116 and  mychar != 121):\n","    continue                        #skip all loop code after this and start next loop\n","  print(chr(mychar), end=' ')       #if statement above has to be false for this line to be reached\n","else:                               #while loops can have else statements that execute when the boolean control is false may work well with a break\n","  print(\"\\n\\n11. This else condition will execute when the boolean statement of the while loop is false\") \n","\n","\n","#****************************************\n","print()\n","print()\n","#while loop configured to behave like a do while loop.  Will ask for password at least once \n","print(\"12. #while loop configured to work like do while loop, condition is at end of code block\")\n","print(\"13. #will continually prompt for password until \\\"password\\\" is enetered\")\n","\n","print()\n","\n","while(True):\n","  mypass = input(\"Enter your password: \")\n","  if(mypass == \"password\"):\n","    break                        #skip all loop code after this and start next loop\n","  else:\n","    print(\"15. Your password is incorrect, try \\\"password\\\"\")\n","\n","#an else statement will not work with this loop because its boolean condition will never be false  \n","print(\"16. You have successfull logged in\")\n","\n","print()\n","\n","num = eval(input(\"Enter a number from 1-10: \"))\n","while(num < 1 or num > 10):\n","  print(\"What part or number between 1-10 did you not understand?\")\n","  num = eval(input(\"Enter a number from 1-10: \"))\n","\n","print(\"Wow you entered\", num, \"which is between 1-10, good job!\")\n","print(\"The end\")"],"execution_count":1,"outputs":[{"output_type":"stream","text":["1. #Basic while loop outputting counter\n","0\n","1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","\n","\n","2. #while loop outputs letters of the alphabet based on entered number\n","How many letters of the alphabet do you want to see?(boolean comparisson): 26\n","a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,\n","\n","3. #while loop outputs letters of the alphabet based on entered number\n","4. #uses break statement to stop after z\n","5. #uses else statement if break is not triggered\n","\n","How many letters of the alphabet do you want to see?(break): 10\n","a,b,c,d,e,f,g,h,i,j,\n","7. Are these the letters you are looking for?\n","\n","\n","8. #while loop outputs only certain letters of the alphabet\n","9. #will print nothing if number is below 7\n","10. #20 and 20 will give variations of word\n","\n","How many letters of the alphabet do you want to see?(do 20 or 26 to get scared): 122\n","g h o s t y \n","\n","11. This else condition will execute when the boolean statement of the while loop is false\n","\n","\n","12. #while loop configured to work like do while loop, condition is at end of code block\n","13. #will continually prompt for password until \"password\" is enetered\n","\n","Enter your password: password\n","16. You have successfull logged in\n","\n","Enter a number from 1-10: 0\n","What part or number between 1-10 did you not understand?\n","Enter a number from 1-10: 15\n","What part or number between 1-10 did you not understand?\n","Enter a number from 1-10: 5\n","Wow you entered 5 which is between 1-10, good job!\n","The end\n"],"name":"stdout"}]}]}