{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Unit 4 IF Statements","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMatglbax7IoQL8RKDidrAl"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"aNRJehEiA9jl"},"source":["[Learning Plan Index](https://docs.google.com/document/d/1B5yWb6wCSRhqD42iWxCi7bmLPY2EqvU6pbiEQT0zs20/edit?usp=sharing)\n","\n","\n","[04P - 01 - Unit 4 Selection Python Problems](https://docs.google.com/document/d/1b_3Wnc3aRuoKD4FpgPn7Kgo2Rrx3eaD_rUbugq2HrIQ/edit?usp=sharing)\n","\n","#If Selection Statements\n","\n","IF selection statments allow programmers to make basic decisions, or selections, based on Boolean logic.  The format of an IF statement is:\n","\n","\n","\n","```\n","# This is formatted as code\n","if(boolean statement):\n","  code here only happens if boolean is true\n","\n","new line of code unaffected by the IF statement goes here\n","```\n","\n","\n","IF statements are followed by parentheses with a boolean statement and then a colon.  Everything that is affected by the IF statement must be indented below the IF statement.  When you are done with the IF statement stop indenting code, and have a blank line of white space for readability.  A simple IF statement will either have extra code that does something if the boolean statement is true or the extra code will not happen if the boolean is false.  In Python a common mistake with IF statments is improper indentation of code that is supposed to be part of the IF statement.  \n","\n","#if else statements\n","IF statements can be paired with an else statement so that if the boolean statement is false the code under the else statement will happen.  what will the following code do?\n","\n","```\n","# This is formatted as code\n","x = 5\n","if(x < 5):\n","  print(\"x < 5\")\n","else:\n","  print(\"x > 4\")\n","```\n","\n","The code above will output \"x > 4\".  If x were less then 5 then it would output \"x < 5\"\n","\n","#if else if statements (elif)\n","Sometimes programs need to make more complex selections and we can use \"elif\" statements for that.  The code below is going to check if x is 1, 2, or 3.  If none of those things are true the else statement will happen.  The else statement is often referred to as a \"catch all\", because it will only happen when none of the preceding boolean statements are true.  It is often a good practice to have an else statement in the event you have a problem with your logic.  Thinking you have covered all of the possibilities and actually covering all the possibilities are not always the same. \n","\n","```\n","# This is formatted as code\n","if(x == 1):\n","  print(\"x = 1\")\n","elif(x == 2):\n","  print(\"x = 2\")\n","elif(x > 2 and x < 4): #this is the same as saying x == 3\n","  print(\"x = 3\")\n","else:\n","  print(\"x != 1, 2, or 3\")\n","```\n","\n","#Nested IF statements\n","Putting IF statements inside of other if statements is another thing that can be done for more complex selection statements.  There is no limit to how many times I can nest IF statements within IF statements.  However, if you are nesting a lot that may be a sign that you are overly complicating things.\n","\n","\n","```\n","# This is formatted as code\n","if(type(x) == str and len(x) <= 1):\n","\n","  if(ord(x) > 64 and ord(x) < 91 ):\n","    print(\"your variable is a capital letter\")\n","  elif(ord(x) > 96 and ord(x) < 122 ):\n","    print(\"your variable is a lowercase letter\")\n","  else:\n","    print(\"your variable is not a letter, but some weird character\")\n","\n","elif(type(x) == str and len(x) > 1):\n","  print(\"your variable is a string longer than 1 character\")\n","elif(type(x) == int):\n","\n","  if(x >= 0):\n","    print(\"your variable is a positive number\")\n","  elif(x < 0):\n","    print(\"your variable is a negative number\")\n","  else:\n","    print(\"something weird happened with your number?\")\n","    \n","else:\n","  print(\"your variable is not a letter or string ... what is it\") \n","```\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"90JKSsZhBZs_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612456814662,"user_tz":300,"elapsed":354,"user":{"displayName":"Gordon Reynolds","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGoYPRcMA4nR0qsuORT0NMtQ82CEGrL0v9oloo=s64","userId":"02111247687678533158"}},"outputId":"a1231853-b891-4716-d2e8-ed91cd44e089"},"source":["x = 5\n","\n","#below is a simple if statement that is checking to see if x = 5, if does the print statement will happen otherwise it will not\n","if(x == 5):\n","  print(\"1. x = 5\")\n","\n","#below is a slightly more complex if statement with an else, in this case one of the two things will always print depending on the value of x\n","if(x < 5):\n","  print(\"2. x < 5\")\n","else:\n","  print(\"3. x > 4\")\n","\n","#this is a more complex elif statement that we can use to make more detailed selections based on our boolean logic\n","if(x == 1):\n","  print(\"4. x = 1\")\n","elif(x == 2):\n","  print(\"5. x = 2\")\n","elif(x > 2 and x < 4): #this is the same as saying x == 3\n","  print(\"6. x = 3\")\n","else:\n","  print(\"7. x != 1, 2, or 3\")\n","\n","x = \"word\"    #change x to different letters, strings, negative/positive numbers, and True and see what you get\n","if(type(x) == str and len(x) <= 1):\n","\n","  if(ord(x) > 64 and ord(x) < 91 ):\n","    print(\"8. your variable is a capital letter\")\n","  elif(ord(x) > 96 and ord(x) < 122 ):\n","    print(\"9. your variable is a lowercase letter\")\n","  else:\n","    print(\"10. your variable is not a letter, but some weird character\")\n","\n","elif(type(x) == str and len(x) > 1):\n","  print(\"11. your variable is a string longer than 1 character\")\n","elif(type(x) == int):\n","\n","  if(x >= 0):\n","    print(\"12. your variable is a positive number\")\n","  elif(x < 0):\n","    print(\"13. your variable is a negative number\")\n","  else:\n","    print(\"14. something weird happened with your number?\")\n","    \n","else:\n","  print(\"15. your variable is not a letter or string ... what is it\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1. x = 5\n","3. x > 4\n","7. x != 1, 2, or 3\n","11. your variable is a string longer than 1 character\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"8t7TeDxngXOE"},"source":["#Multiple IF Statements vs. ELIF Statements\n","\n","If you need to have a single action happen related to a variable then you want an elif statement.  An elif statement will execute until it finds a true condition, once it performs the code within that true condition, or finds nothing true in the statement, it will exit the entire elif statement.  A series of IF statements will all execute regardless if one is found true or not.  This difference can effect your logic as well as the efficiency of your program.  Look at the difference between the two approaches below and one example of a logic error."]},{"cell_type":"code","metadata":{"id":"MyOg6nNHhFen","colab":{"base_uri":"https://localhost:8080/","height":255},"executionInfo":{"status":"ok","timestamp":1581690467257,"user_tz":300,"elapsed":581,"user":{"displayName":"Gordon Reynolds","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAal7SoN20VzbrHnHUoXsjoNTa9aDC6aG5vGpPl=s64","userId":"02111247687678533158"}},"outputId":"caacfcf0-518a-4374-9139-adb4a903fe8e"},"source":["grade = 75\n","\n","#this is the correct logical approach and efficient solution since this will only execute until the second elif statement\n","if(grade < 70):\n","  print(\"1. Your grade is a F\")\n","elif(grade <= 72):\n","  print(\"2. Your grade is a C-\")\n","elif(grade <= 76): #for grade of 75 this executes\n","  print(\"3. Your grade is a C\")  #this is the output for a grade of 75 the program will move to line #24 after executing this code.\n","elif(grade <= 79):\n","  print(\"4. Your grade is a C+\")\n","elif(grade <= 82):\n","  print(\"5. Your grade is a B-\")\n","elif(grade <= 86):\n","  print(\"6. Your grade is a B\")\n","elif(grade <= 89):\n","  print(\"7. Your grade is a B+\")\n","elif(grade <= 92):\n","  print(\"8. Your grade is a A-\")\n","elif(grade <= 96):\n","  print(\"9. Your grade is a A\")\n","elif(grade <= 100):\n","  print(\"10. Your grade is a A+\")\n","\n","\n","print()\n","print()\n","#for this application this approach is logically correct but is more inefficient because every if statement is executed even after the correct once is found\n","if(grade < 70):\n","  print(\"11. Your grade is a F\")\n","\n","if(grade <= 72 and grade > 69):\n","  print(\"12. Your grade is a C-\")\n","\n","if(grade <= 76 and grade > 72):\n","  print(\"13. Your grade is a C\")\n","\n","if(grade <= 79 and grade > 76):\n","  print(\"14. Your grade is a C+\")\n","\n","if(grade <= 82 and grade > 79):\n","  print(\"15. Your grade is a B-\")\n","\n","if(grade <= 86 and grade > 82):\n","  print(\"16. Your grade is a B\")\n","\n","if(grade <= 89 and grade > 86):\n","  print(\"17. Your grade is a B+\")\n","\n","if(grade <= 92 and grade > 89):\n","  print(\"18. Your grade is a A-\")\n","\n","if(grade <= 96 and grade > 92):\n","  print(\"19. Your grade is a A\")\n","\n","if(grade <= 100 and grade > 96):\n","  print(\"20. Your grade is a A+\")\n","\n","\n","print()\n","print()\n","#for this application this approach is logically incorrect and is also inefficient because every if statement is executed even if a correct statement is found\n","if(grade < 70):\n","  print(\"21. Your grade is a F\")\n","\n","if(grade <= 72):\n","  print(\"22. Your grade is a C-\")\n","\n","if(grade <= 76):\n","  print(\"23. Your grade is a C\")\n","\n","if(grade <= 79):\n","  print(\"24. Your grade is a C+\")\n","\n","if(grade <= 82):\n","  print(\"25. Your grade is a B-\")\n","\n","if(grade <= 86):\n","  print(\"26. Your grade is a B\")\n","\n","if(grade <= 89):\n","  print(\"27. Your grade is a B+\")\n","\n","if(grade <= 92):\n","  print(\"28. Your grade is a A-\")\n","\n","if(grade <= 96):\n","  print(\"29. Your grade is a A\")\n","\n","if(grade <= 100):\n","  print(\"30. Your grade is a A+\")\n","\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["3. Your grade is a C\n","\n","\n","13. Your grade is a C\n","\n","\n","23. Your grade is a C\n","24. Your grade is a C+\n","25. Your grade is a B-\n","26. Your grade is a B\n","27. Your grade is a B+\n","28. Your grade is a A-\n","29. Your grade is a A\n","30. Your grade is a A+\n"],"name":"stdout"}]}]}